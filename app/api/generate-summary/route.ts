import { NextRequest, NextResponse } from 'next/server'
import Groq from 'groq-sdk'

type SummaryRequest = {
  text: string
  level: 'brief' | 'moderate' | 'detailed'
  language?: string
}

type SummaryResponse = {
  summary: string
  objectives: Array<{
    id: string
    title: string
    description: string
    category: string
    importance: 'high' | 'medium' | 'low'
    estimatedTime: number
    subObjectives: string[]
    prerequisites: string[]
  }>
  keyPoints: Array<{
    id: string
    content: string
    category: string
    difficulty: 'basic' | 'intermediate' | 'advanced'
    relatedConcepts: string[]
    explanation: string
    examples: string[]
    practiceQuestions: string[]
  }>
  insights: {
    difficulty: 'easy' | 'medium' | 'hard'
    estimatedReadTime: number
    keyConcepts: string[]
    recommendations: string[]
    strengths: string[]
    improvements: string[]
    learningPath?: {
      beginner: string[]
      intermediate: string[]
      advanced: string[]
    }
    assessment?: {
      knowledgeCheck: string[]
      practicalTasks: string[]
      criticalThinking: string[]
    }
    resources?: {
      additionalReading: string[]
      tools: string[]
      communities: string[]
    }
  }
}

export async function POST(req: NextRequest) {
  try {
    // L·∫•y ng√¥n ng·ªØ t·ª´ Accept-Language header
    const acceptLanguage = req.headers.get('accept-language') || 'vi'
    const body = (await req.json()) as SummaryRequest
    const { text, level = 'moderate' } = body
    const language = acceptLanguage.startsWith('en') ? 'en' : 'vi'
    
    console.log('Request language:', language)
    console.log('Accept-Language header:', acceptLanguage)
    console.log('Language detection logic:', acceptLanguage.startsWith('en') ? 'en' : 'vi')

    if (!process.env.GROQ_API_KEY) {
      return NextResponse.json(
        { error: 'Missing GROQ_API_KEY on server' },
        { status: 500 }
      )
    }

    if (!text || text.trim().length < 100) {
      return NextResponse.json(
        { error: 'Text content is required and should be at least 100 characters.' },
        { status: 400 }
      )
    }

         const groq = new Groq({
       apiKey: process.env.GROQ_API_KEY!
     })

     // X·ª≠ l√Ω file d√†i - l·∫•y ph·∫ßn ƒë·∫ßu v√† cu·ªëi ƒë·ªÉ c√≥ context ƒë·∫ßy ƒë·ªß
     let processedText = text
     if (text.length > 6000) {
       const startText = text.substring(0, 3000)
       const endText = text.substring(text.length - 1000)
       processedText = `${startText}\n\n... (n·ªôi dung gi·ªØa ƒë∆∞·ª£c b·ªè qua do ƒë·ªô d√†i) ...\n\n${endText}`
       console.log('Text too long, using truncated version:', processedText.length, 'characters')
     }

         // T·∫°o prompt d·ª±a tr√™n m·ª©c ƒë·ªô chi ti·∫øt v·ªõi y√™u c·∫ßu c·ª• th·ªÉ v·ªÅ ƒë·ªô d√†i
     const levelInstructions = {
       brief: language === 'vi' ? 
         "T√≥m t·∫Øt ng·∫Øn g·ªçn (200-300 t·ª´), ch·ªâ nh·ªØng ƒëi·ªÉm ch√≠nh nh·∫•t t·ª´ n·ªôi dung th·ª±c t·∫ø c·ªßa t√†i li·ªáu" :
         "Brief summary (200-300 words), only the most important points from the actual content of the document",
       moderate: language === 'vi' ? 
         "T√≥m t·∫Øt c√¢n b·∫±ng (400-500 t·ª´), bao g·ªìm √Ω ch√≠nh v√† chi ti·∫øt quan tr·ªçng t·ª´ n·ªôi dung th·ª±c t·∫ø" :
         "Balanced summary (400-500 words), including main ideas and important details from the actual content",
       detailed: language === 'vi' ? 
         "T√≥m t·∫Øt chi ti·∫øt (600-800 t·ª´), bao g·ªìm t·∫•t c·∫£ kh√°i ni·ªám v√† chi ti·∫øt t·ª´ n·ªôi dung th·ª±c t·∫ø" :
         "Detailed summary (600-800 words), including all concepts and details from the actual content"
     }

         const prompt = `${language === 'vi' ? 'B·∫°n l√† m·ªôt chuy√™n gia gi√°o d·ª•c v√† ph√¢n t√≠ch t√†i li·ªáu h·ªçc thu·∫≠t. B·∫ÆT BU·ªòC tr·∫£ l·ªùi b·∫±ng Ti·∫øng Vi·ªát. H√£y ph√¢n t√≠ch n·ªôi dung sau v√† t·∫°o ra m·ªôt b√°o c√°o h·ªçc t·∫≠p to√†n di·ªán.' : 'You are an educational expert and academic document analyst. MUST respond in English only. Please analyze the following content and create a comprehensive learning report.'}

‚ö†Ô∏è ${language === 'vi' ? 'C·∫¢NH B√ÅO QUAN TR·ªåNG: KH√îNG ƒê∆Ø·ª¢C COPY Y√äU C·∫¶U N√ÄY V√ÄO PH·∫¶N SUMMARY. PH·∫¢I VI·∫æT N·ªòI DUNG TH·ª∞C T·∫æ T·ª™ T√ÄI LI·ªÜU.' : 'IMPORTANT WARNING: DO NOT COPY THIS REQUEST INTO THE SUMMARY SECTION. MUST WRITE ACTUAL CONTENT FROM THE DOCUMENT.'}

${language === 'vi' ? 'Y√äU C·∫¶U T√ìM T·∫ÆT' : 'SUMMARY REQUIREMENT'}: ${levelInstructions[level]}
${language === 'vi' ? 'NG√îN NG·ªÆ Y√äU C·∫¶U' : 'REQUESTED LANGUAGE'}: ${language === 'vi' ? 'Ti·∫øng Vi·ªát' : 'English'}
üö® ${language === 'vi' ? 'NG√îN NG·ªÆ B·∫ÆT BU·ªòC:' : 'MANDATORY LANGUAGE:'} ${language === 'vi' ? 'Ti·∫øng Vi·ªát' : 'English'}

‚ö†Ô∏è ${language === 'vi' ? 'QUAN TR·ªåNG V·ªÄ NG√îN NG·ªÆ' : 'IMPORTANT ABOUT LANGUAGE'}:
- ${language === 'vi' ? 'T·∫§T C·∫¢ n·ªôi dung tr·∫£ v·ªÅ PH·∫¢I b·∫±ng' : 'ALL returned content MUST be in'} ${language === 'vi' ? 'Ti·∫øng Vi·ªát' : 'English'}
- ${language === 'vi' ? 'Summary, objectives, keyPoints, insights - T·∫§T C·∫¢ ph·∫£i b·∫±ng' : 'Summary, objectives, keyPoints, insights - ALL must be in'} ${language === 'vi' ? 'Ti·∫øng Vi·ªát' : 'English'}
- ${language === 'vi' ? 'KH√îNG ƒë∆∞·ª£c tr·ªôn l·∫´n ng√¥n ng·ªØ' : 'DO NOT mix languages'}
- ${language === 'vi' ? 'N·∫øu language=\'en\' th√¨ T·∫§T C·∫¢ ph·∫£i b·∫±ng English' : 'If language=\'en\' then ALL must be in English'}
- ${language === 'vi' ? 'N·∫øu language=\'vi\' th√¨ T·∫§T C·∫¢ ph·∫£i b·∫±ng Ti·∫øng Vi·ªát' : 'If language=\'vi\' then ALL must be in Vietnamese'}
- ${language === 'vi' ? 'NG√îN NG·ªÆ HI·ªÜN T·∫†I ƒê∆Ø·ª¢C Y√äU C·∫¶U:' : 'CURRENT REQUESTED LANGUAGE:'} ${language === 'vi' ? 'Ti·∫øng Vi·ªát' : 'English'}
- ${language === 'vi' ? 'TUY·ªÜT ƒê·ªêI KH√îNG VI·∫æT B·∫∞NG NG√îN NG·ªÆ KH√ÅC' : 'ABSOLUTELY DO NOT WRITE IN OTHER LANGUAGES'}

${language === 'vi' ? 'QUY T·∫ÆC B·∫ÆT BU·ªòC V·ªÄ N·ªòI DUNG' : 'MANDATORY CONTENT RULES'}:
- ${language === 'vi' ? 'T√≥m t·∫Øt PH·∫¢I d·ª±a tr√™n n·ªôi dung th·ª±c t·∫ø c·ªßa t√†i li·ªáu ƒë∆∞·ª£c cung c·∫•p' : 'Summary MUST be based on the actual content of the provided document'}
- ${language === 'vi' ? 'PH·∫¢I ƒë·ªÅ c·∫≠p ƒë·∫øn c√°c √Ω ch√≠nh, kh√°i ni·ªám, v√† chi ti·∫øt c·ª• th·ªÉ t·ª´ t√†i li·ªáu' : 'MUST mention main ideas, concepts, and specific details from the document'}
- ${language === 'vi' ? 'KH√îNG ƒê∆Ø·ª¢C vi·∫øt summary chung chung, ph·∫£i li√™n quan tr·ª±c ti·∫øp ƒë·∫øn n·ªôi dung t√†i li·ªáu' : 'DO NOT write generic summary, must be directly related to document content'}
- ${language === 'vi' ? 'T√≥m t·∫Øt ph·∫£i c√≥ √≠t nh·∫•t' : 'Summary must have at least'} ${level === 'brief' ? '200' : level === 'moderate' ? '400' : '600'} ${language === 'vi' ? 't·ª´' : 'words'}
- ${language === 'vi' ? '∆Øu ti√™n n·ªôi dung ch√≠nh x√°c v√† li√™n quan h∆°n l√† ƒë·ªô d√†i' : 'Prioritize accurate and relevant content over length'}

V√ç D·ª§ V·ªÄ T√ìM T·∫ÆT ƒê√öNG N·ªòI DUNG:
${language === 'vi' ? 
'"T√†i li·ªáu n√†y tr√¨nh b√†y v·ªÅ Lab 1: Ti·ªÅn x·ª≠ l√Ω v√† tr·ª±c quan h√≥a d·ªØ li·ªáu. B√†i lab t·∫≠p trung v√†o vi·ªác ph√¢n t√≠ch Video Game Sales dataset ch·ª©a th√¥ng tin v·ªÅ h∆°n 16,500 tr√≤ ch∆°i ƒëi·ªán t·ª≠. N·ªôi dung bao g·ªìm chu·∫©n b·ªã m√¥i tr∆∞·ªùng Python v·ªõi Pandas, NumPy, Matplotlib, Seaborn. C√°c k·ªπ nƒÉng ch√≠nh: l√†m s·∫°ch d·ªØ li·ªáu, x·ª≠ l√Ω gi√° tr·ªã thi·∫øu, s·ª≠a ƒë·ªïi ki·ªÉu d·ªØ li·ªáu, ki·ªÉm tra v√† x√≥a d·ªØ li·ªáu tr√πng l·∫∑p, tr·ª±c quan h√≥a qua bi·ªÉu ƒë·ªì ph√¢n t√°n, c·ªôt, ƒë∆∞·ªùng, h·ªôp. T√†i li·ªáu cung c·∫•p h∆∞·ªõng d·∫´n v·ªÅ c·∫•u tr√∫c d·ªØ li·ªáu Pandas Series v√† DataFrame."' :
'"This document presents Lab 1: Data Preprocessing and Visualization. The lab focuses on analyzing the Video Game Sales dataset containing information about over 16,500 video games. Content includes setting up Python environment with Pandas, NumPy, Matplotlib, Seaborn. Key skills: data cleaning, handling missing values, modifying data types, checking and removing duplicate data, visualization through scatter plots, bar charts, line charts, box plots. The document provides guidance on Pandas Series and DataFrame data structures."'
}

‚ö†Ô∏è ${language === 'vi' ? 'L∆ØU √ù: ƒê√¢y l√† v√≠ d·ª• v·ªÅ c√°ch vi·∫øt summary. B·∫°n ph·∫£i vi·∫øt summary th·ª±c t·∫ø d·ª±a tr√™n n·ªôi dung t√†i li·ªáu ƒë∆∞·ª£c cung c·∫•p, kh√¥ng copy v√≠ d·ª• n√†y.' : 'NOTE: This is an example of how to write a summary. You must write an actual summary based on the provided document content, do not copy this example.'}

${language === 'vi' ? 'H∆Ø·ªöNG D·∫™N CHI TI·∫æT' : 'DETAILED GUIDELINES'}:
1. ${language === 'vi' ? 'T√≥m t·∫Øt PH·∫¢I d·ª±a tr√™n n·ªôi dung th·ª±c t·∫ø c·ªßa t√†i li·ªáu ƒë∆∞·ª£c cung c·∫•p' : 'Summary MUST be based on the actual content of the provided document'}
2. ${language === 'vi' ? 'ƒê·ªÅ c·∫≠p ƒë·∫øn c√°c √Ω ch√≠nh, kh√°i ni·ªám, v√† chi ti·∫øt c·ª• th·ªÉ t·ª´ t√†i li·ªáu' : 'Mention main ideas, concepts, and specific details from the document'}
3. ${language === 'vi' ? 'KH√îNG vi·∫øt summary chung chung, ph·∫£i li√™n quan tr·ª±c ti·∫øp ƒë·∫øn n·ªôi dung t√†i li·ªáu' : 'DO NOT write generic summary, must be directly related to document content'}
4. ${language === 'vi' ? 'N√™u r√µ t√™n b√†i, ch·ªß ƒë·ªÅ, v√† c√°c ƒëi·ªÉm quan tr·ªçng t·ª´ t√†i li·ªáu' : 'Clearly state the lesson name, topic, and important points from the document'}
5. ${language === 'vi' ? 'Bao g·ªìm c√°c kh√°i ni·ªám, ƒë·ªãnh nghƒ©a, v√† v√≠ d·ª• c·ª• th·ªÉ t·ª´ t√†i li·ªáu' : 'Include concepts, definitions, and specific examples from the document'}
6. ${language === 'vi' ? 'T·∫≠p trung v√†o n·ªôi dung th·ª±c t·∫ø thay v√¨ gi·∫£i th√≠ch chung chung' : 'Focus on actual content rather than general explanations'}

${language === 'vi' ? 'L∆ØU √ù QUAN TR·ªåNG' : 'IMPORTANT NOTES'}:
- ${language === 'vi' ? 'T√≥m t·∫Øt PH·∫¢I d·ª±a tr√™n n·ªôi dung th·ª±c t·∫ø c·ªßa t√†i li·ªáu ƒë∆∞·ª£c cung c·∫•p' : 'Summary MUST be based on the actual content of the provided document'}
- ${language === 'vi' ? 'ƒê·ªÅ c·∫≠p ƒë·∫øn c√°c √Ω ch√≠nh, kh√°i ni·ªám, v√† chi ti·∫øt c·ª• th·ªÉ t·ª´ t√†i li·ªáu' : 'Mention main ideas, concepts, and specific details from the document'}
- ${language === 'vi' ? 'KH√îNG vi·∫øt summary chung chung, ph·∫£i li√™n quan tr·ª±c ti·∫øp ƒë·∫øn n·ªôi dung t√†i li·ªáu' : 'DO NOT write generic summary, must be directly related to document content'}
- ${language === 'vi' ? 'T·∫≠p trung v√†o n·ªôi dung th·ª±c t·∫ø thay v√¨ gi·∫£i th√≠ch chung chung' : 'Focus on actual content rather than general explanations'}
- ${language === 'vi' ? 'T√≥m t·∫Øt ph·∫£i c√≥ √≠t nh·∫•t' : 'Summary must have at least'} ${level === 'brief' ? '200' : level === 'moderate' ? '400' : '600'} ${language === 'vi' ? 't·ª´' : 'words'}

${language === 'vi' ? 'PH√ÇN T√çCH AI CHI TI·∫æT' : 'DETAILED AI ANALYSIS'}:
- ${language === 'vi' ? 'ƒê√°nh gi√° ƒë·ªô kh√≥ v√† ph√π h·ª£p v·ªõi ƒë·ªëi t∆∞·ª£ng h·ªçc vi√™n' : 'Assess difficulty and suitability for target learners'}
- ${language === 'vi' ? 'Ph√¢n t√≠ch c·∫•u tr√∫c v√† t·ªï ch·ª©c n·ªôi dung' : 'Analyze content structure and organization'}
- ${language === 'vi' ? 'ƒê√°nh gi√° ch·∫•t l∆∞·ª£ng v√† t√≠nh th·ª±c t·∫ø c·ªßa t√†i li·ªáu' : 'Evaluate document quality and practicality'}
- ${language === 'vi' ? 'ƒê·ªÅ xu·∫•t ph∆∞∆°ng ph√°p h·ªçc t·∫≠p hi·ªáu qu·∫£' : 'Suggest effective learning methods'}
- ${language === 'vi' ? 'X√°c ƒë·ªãnh c√°c ƒëi·ªÉm m·∫°nh v√† ƒëi·ªÉm y·∫øu' : 'Identify strengths and weaknesses'}
- ${language === 'vi' ? 'ƒê∆∞a ra khuy·∫øn ngh·ªã c·∫£i thi·ªán c·ª• th·ªÉ' : 'Provide specific improvement recommendations'}

${language === 'vi' ? 'H∆Ø·ªöNG D·∫™N CHI TI·∫æT CHO OBJECTIVES V√Ä KEYPOINTS' : 'DETAILED GUIDELINES FOR OBJECTIVES AND KEYPOINTS'}:

${language === 'vi' ? 'OBJECTIVES - Y√äU C·∫¶U C·ª§ TH·ªÇ:' : 'OBJECTIVES - SPECIFIC REQUIREMENTS:'}:
- ${language === 'vi' ? 'title: T√™n m·ª•c ti√™u h·ªçc t·∫≠p c·ª• th·ªÉ t·ª´ n·ªôi dung t√†i li·ªáu, kh√¥ng ph·∫£i t√™n chung chung' : 'title: Specific learning objective name from document content, not generic names'}
- ${language === 'vi' ? 'description: M√¥ t·∫£ chi ti·∫øt c√°ch ƒë·∫°t ƒë∆∞·ª£c m·ª•c ti√™u d·ª±a tr√™n n·ªôi dung t√†i li·ªáu' : 'description: Detailed description of how to achieve the objective based on document content'}
- ${language === 'vi' ? 'estimatedTime: Th·ªùi gian ∆∞·ªõc t√≠nh th·ª±c t·∫ø ƒë·ªÉ ho√†n th√†nh m·ª•c ti√™u (ph√∫t)' : 'estimatedTime: Realistic estimated time to complete the objective (minutes)'}
- ${language === 'vi' ? 'subObjectives: 3-4 m·ª•c ti√™u con c·ª• th·ªÉ, chi ti·∫øt t·ª´ n·ªôi dung t√†i li·ªáu, kh√¥ng ph·∫£i placeholder' : 'subObjectives: 3-4 specific, detailed sub-objectives from document content, not placeholders'}
- ${language === 'vi' ? 'prerequisites: 2-3 ƒëi·ªÅu ki·ªán ti√™n quy·∫øt c·ª• th·ªÉ t·ª´ n·ªôi dung t√†i li·ªáu' : 'prerequisites: 2-3 specific prerequisites from document content'}

${language === 'vi' ? 'KEYPOINTS - Y√äU C·∫¶U C·ª§ TH·ªÇ:' : 'KEYPOINTS - SPECIFIC REQUIREMENTS:'}:
- ${language === 'vi' ? 'S·ªê L∆Ø·ª¢NG: PH·∫¢I t·∫°o √≠t nh·∫•t 3-5 keyPoints kh√°c nhau' : 'QUANTITY: MUST create at least 3-5 different keyPoints'}
- ${language === 'vi' ? 'content: ƒêi·ªÉm ch√≠nh quan tr·ªçng v·ªõi gi·∫£i th√≠ch chi ti·∫øt t·ª´ n·ªôi dung t√†i li·ªáu' : 'content: Important key point with detailed explanation from document content'}
- ${language === 'vi' ? 'explanation: Gi·∫£i th√≠ch chi ti·∫øt v·ªÅ ƒëi·ªÉm ch√≠nh n√†y d·ª±a tr√™n n·ªôi dung c·ª• th·ªÉ t·ª´ t√†i li·ªáu' : 'explanation: Detailed explanation of this key point based on specific content from the document'}
- ${language === 'vi' ? 'examples: 3 v√≠ d·ª• c·ª• th·ªÉ t·ª´ n·ªôi dung t√†i li·ªáu, kh√¥ng ph·∫£i placeholder' : 'examples: 3 specific examples from document content, not placeholders'}
- ${language === 'vi' ? 'practiceQuestions: 3 c√¢u h·ªèi luy·ªán t·∫≠p c·ª• th·ªÉ d·ª±a tr√™n n·ªôi dung t√†i li·ªáu' : 'practiceQuestions: 3 specific practice questions based on document content'}
- ${language === 'vi' ? 'M·ªói keyPoint ph·∫£i c√≥ n·ªôi dung kh√°c nhau, kh√¥ng tr√πng l·∫∑p' : 'Each keyPoint must have different content, no duplicates'}

${language === 'vi' ? 'QUAN TR·ªåNG: T·∫§T C·∫¢ n·ªôi dung ph·∫£i d·ª±a tr√™n t√†i li·ªáu ƒë∆∞·ª£c cung c·∫•p, kh√¥ng ƒë∆∞·ª£c s·ª≠ d·ª•ng placeholder ho·∫∑c n·ªôi dung chung chung' : 'IMPORTANT: ALL content must be based on the provided document, do not use placeholders or generic content'}

${language === 'vi' ? 'Tr·∫£ v·ªÅ JSON v·ªõi ƒë·ªãnh d·∫°ng ch√≠nh x√°c sau' : 'Return JSON with the following exact format'}:
üö® ${language === 'vi' ? 'L∆ØU √ù: T·∫§T C·∫¢ n·ªôi dung trong JSON PH·∫¢I b·∫±ng' : 'NOTE: ALL content in JSON MUST be in'} ${language === 'vi' ? 'Ti·∫øng Vi·ªát' : 'English'}
{
  "summary": "${language === 'vi' ? 'VI·∫æT T√ìM T·∫ÆT TH·ª∞C T·∫æ ·ªû ƒê√ÇY - KH√îNG COPY Y√äU C·∫¶U N√ÄY. T√≥m t·∫Øt ph·∫£i ƒë·ªÅ c·∫≠p ƒë·∫øn n·ªôi dung c·ª• th·ªÉ t·ª´ t√†i li·ªáu, v√≠ d·ª•: \'T√†i li·ªáu n√†y tr√¨nh b√†y v·ªÅ Lab 1: Ti·ªÅn x·ª≠ l√Ω v√† tr·ª±c quan h√≥a d·ªØ li·ªáu. B√†i lab t·∫≠p trung v√†o vi·ªác ph√¢n t√≠ch Video Game Sales dataset ch·ª©a th√¥ng tin v·ªÅ h∆°n 16,500 tr√≤ ch∆°i ƒëi·ªán t·ª≠...\'' : 'WRITE ACTUAL SUMMARY HERE - DO NOT COPY THIS REQUEST. Summary must mention specific content from the document, example: \'This document presents Lab 1: Data Preprocessing and Visualization. The lab focuses on analyzing the Video Game Sales dataset containing information about over 16,500 video games...\''}",
  "objectives": [
    {
      "id": "obj_1",
      "title": "${language === 'vi' ? 'T√™n m·ª•c ti√™u h·ªçc t·∫≠p c·ª• th·ªÉ t·ª´ n·ªôi dung t√†i li·ªáu' : 'Specific learning objective name from document content'}",
      "description": "${language === 'vi' ? 'M√¥ t·∫£ chi ti·∫øt m·ª•c ti√™u v√† c√°ch ƒë·∫°t ƒë∆∞·ª£c d·ª±a tr√™n n·ªôi dung t√†i li·ªáu' : 'Detailed description of objective and how to achieve it based on document content'}",
      "category": "${language === 'vi' ? 'Danh m·ª•c (Ki·∫øn th·ª©c c∆° b·∫£n/·ª®ng d·ª•ng/T∆∞ duy ph·∫£n bi·ªán)' : 'Category (Basic Knowledge/Application/Critical Thinking)'}",
      "importance": "high|medium|low",
      "estimatedTime": 30,
      "subObjectives": [
        "${language === 'vi' ? 'M·ª•c ti√™u con c·ª• th·ªÉ 1 d·ª±a tr√™n n·ªôi dung t√†i li·ªáu' : 'Specific sub-objective 1 based on document content'}",
        "${language === 'vi' ? 'M·ª•c ti√™u con c·ª• th·ªÉ 2 d·ª±a tr√™n n·ªôi dung t√†i li·ªáu' : 'Specific sub-objective 2 based on document content'}",
        "${language === 'vi' ? 'M·ª•c ti√™u con c·ª• th·ªÉ 3 d·ª±a tr√™n n·ªôi dung t√†i li·ªáu' : 'Specific sub-objective 3 based on document content'}"
      ],
      "prerequisites": [
        "${language === 'vi' ? 'ƒêi·ªÅu ki·ªán ti√™n quy·∫øt c·ª• th·ªÉ 1 t·ª´ n·ªôi dung t√†i li·ªáu' : 'Specific prerequisite 1 from document content'}",
        "${language === 'vi' ? 'ƒêi·ªÅu ki·ªán ti√™n quy·∫øt c·ª• th·ªÉ 2 t·ª´ n·ªôi dung t√†i li·ªáu' : 'Specific prerequisite 2 from document content'}"
      ]
    }
  ],
  "keyPoints": [
    {
      "id": "key_1", 
      "content": "${language === 'vi' ? 'ƒêi·ªÉm ch√≠nh quan tr·ªçng 1 v·ªõi gi·∫£i th√≠ch chi ti·∫øt t·ª´ n·ªôi dung t√†i li·ªáu' : 'Important key point 1 with detailed explanation from document content'}",
      "category": "${language === 'vi' ? 'Danh m·ª•c ch·ªß ƒë·ªÅ 1' : 'Topic category 1'}",
      "difficulty": "basic|intermediate|advanced",
      "relatedConcepts": ["${language === 'vi' ? 'kh√°i ni·ªám li√™n quan 1 t·ª´ t√†i li·ªáu' : 'related concept 1 from document'}", "${language === 'vi' ? 'kh√°i ni·ªám 2 t·ª´ t√†i li·ªáu' : 'concept 2 from document'}"],
      "explanation": "${language === 'vi' ? 'Gi·∫£i th√≠ch chi ti·∫øt v·ªÅ ƒëi·ªÉm ch√≠nh 1 n√†y d·ª±a tr√™n n·ªôi dung c·ª• th·ªÉ t·ª´ t√†i li·ªáu' : 'Detailed explanation of key point 1 based on specific content from the document'}",
      "examples": [
        "${language === 'vi' ? 'V√≠ d·ª• c·ª• th·ªÉ 1 t·ª´ n·ªôi dung t√†i li·ªáu' : 'Specific example 1 from document content'}",
        "${language === 'vi' ? 'V√≠ d·ª• c·ª• th·ªÉ 2 t·ª´ n·ªôi dung t√†i li·ªáu' : 'Specific example 2 from document content'}",
        "${language === 'vi' ? 'V√≠ d·ª• c·ª• th·ªÉ 3 t·ª´ n·ªôi dung t√†i li·ªáu' : 'Specific example 3 from document content'}"
      ],
      "practiceQuestions": [
        "${language === 'vi' ? 'C√¢u h·ªèi luy·ªán t·∫≠p c·ª• th·ªÉ 1 d·ª±a tr√™n n·ªôi dung t√†i li·ªáu' : 'Specific practice question 1 based on document content'}",
        "${language === 'vi' ? 'C√¢u h·ªèi luy·ªán t·∫≠p c·ª• th·ªÉ 2 d·ª±a tr√™n n·ªôi dung t√†i li·ªáu' : 'Specific practice question 2 based on document content'}",
        "${language === 'vi' ? 'C√¢u h·ªèi luy·ªán t·∫≠p c·ª• th·ªÉ 3 d·ª±a tr√™n n·ªôi dung t√†i li·ªáu' : 'Specific practice question 3 based on document content'}"
      ]
    },
    {
      "id": "key_2", 
      "content": "${language === 'vi' ? 'ƒêi·ªÉm ch√≠nh quan tr·ªçng 2 v·ªõi gi·∫£i th√≠ch chi ti·∫øt t·ª´ n·ªôi dung t√†i li·ªáu' : 'Important key point 2 with detailed explanation from document content'}",
      "category": "${language === 'vi' ? 'Danh m·ª•c ch·ªß ƒë·ªÅ 2' : 'Topic category 2'}",
      "difficulty": "basic|intermediate|advanced",
      "relatedConcepts": ["${language === 'vi' ? 'kh√°i ni·ªám li√™n quan 3 t·ª´ t√†i li·ªáu' : 'related concept 3 from document'}", "${language === 'vi' ? 'kh√°i ni·ªám 4 t·ª´ t√†i li·ªáu' : 'concept 4 from document'}"],
      "explanation": "${language === 'vi' ? 'Gi·∫£i th√≠ch chi ti·∫øt v·ªÅ ƒëi·ªÉm ch√≠nh 2 n√†y d·ª±a tr√™n n·ªôi dung c·ª• th·ªÉ t·ª´ t√†i li·ªáu' : 'Detailed explanation of key point 2 based on specific content from the document'}",
      "examples": [
        "${language === 'vi' ? 'V√≠ d·ª• c·ª• th·ªÉ 4 t·ª´ n·ªôi dung t√†i li·ªáu' : 'Specific example 4 from document content'}",
        "${language === 'vi' ? 'V√≠ d·ª• c·ª• th·ªÉ 5 t·ª´ n·ªôi dung t√†i li·ªáu' : 'Specific example 5 from document content'}",
        "${language === 'vi' ? 'V√≠ d·ª• c·ª• th·ªÉ 6 t·ª´ n·ªôi dung t√†i li·ªáu' : 'Specific example 6 from document content'}"
      ],
      "practiceQuestions": [
        "${language === 'vi' ? 'C√¢u h·ªèi luy·ªán t·∫≠p c·ª• th·ªÉ 4 d·ª±a tr√™n n·ªôi dung t√†i li·ªáu' : 'Specific practice question 4 based on document content'}",
        "${language === 'vi' ? 'C√¢u h·ªèi luy·ªán t·∫≠p c·ª• th·ªÉ 5 d·ª±a tr√™n n·ªôi dung t√†i li·ªáu' : 'Specific practice question 5 based on document content'}",
        "${language === 'vi' ? 'C√¢u h·ªèi luy·ªán t·∫≠p c·ª• th·ªÉ 6 d·ª±a tr√™n n·ªôi dung t√†i li·ªáu' : 'Specific practice question 6 based on document content'}"
      ]
    },
    {
      "id": "key_3", 
      "content": "${language === 'vi' ? 'ƒêi·ªÉm ch√≠nh quan tr·ªçng 3 v·ªõi gi·∫£i th√≠ch chi ti·∫øt t·ª´ n·ªôi dung t√†i li·ªáu' : 'Important key point 3 with detailed explanation from document content'}",
      "category": "${language === 'vi' ? 'Danh m·ª•c ch·ªß ƒë·ªÅ 3' : 'Topic category 3'}",
      "difficulty": "basic|intermediate|advanced",
      "relatedConcepts": ["${language === 'vi' ? 'kh√°i ni·ªám li√™n quan 5 t·ª´ t√†i li·ªáu' : 'related concept 5 from document'}", "${language === 'vi' ? 'kh√°i ni·ªám 6 t·ª´ t√†i li·ªáu' : 'concept 6 from document'}"],
      "explanation": "${language === 'vi' ? 'Gi·∫£i th√≠ch chi ti·∫øt v·ªÅ ƒëi·ªÉm ch√≠nh 3 n√†y d·ª±a tr√™n n·ªôi dung c·ª• th·ªÉ t·ª´ t√†i li·ªáu' : 'Detailed explanation of key point 3 based on specific content from the document'}",
      "examples": [
        "${language === 'vi' ? 'V√≠ d·ª• c·ª• th·ªÉ 7 t·ª´ n·ªôi dung t√†i li·ªáu' : 'Specific example 7 from document content'}",
        "${language === 'vi' ? 'V√≠ d·ª• c·ª• th·ªÉ 8 t·ª´ n·ªôi dung t√†i li·ªáu' : 'Specific example 8 from document content'}",
        "${language === 'vi' ? 'V√≠ d·ª• c·ª• th·ªÉ 9 t·ª´ n·ªôi dung t√†i li·ªáu' : 'Specific example 9 from document content'}"
      ],
      "practiceQuestions": [
        "${language === 'vi' ? 'C√¢u h·ªèi luy·ªán t·∫≠p c·ª• th·ªÉ 7 d·ª±a tr√™n n·ªôi dung t√†i li·ªáu' : 'Specific practice question 7 based on document content'}",
        "${language === 'vi' ? 'C√¢u h·ªèi luy·ªán t·∫≠p c·ª• th·ªÉ 8 d·ª±a tr√™n n·ªôi dung t√†i li·ªáu' : 'Specific practice question 8 based on document content'}",
        "${language === 'vi' ? 'C√¢u h·ªèi luy·ªán t·∫≠p c·ª• th·ªÉ 9 d·ª±a tr√™n n·ªôi dung t√†i li·ªáu' : 'Specific practice question 9 based on document content'}"
      ]
    }
  ],
  "insights": {
    "difficulty": "easy|medium|hard",
    "estimatedReadTime": ${language === 'vi' ? 's·ªë_ph√∫t_ƒë·ªçc' : 'reading_time_minutes'},
    "keyConcepts": ["${language === 'vi' ? 'kh√°i ni·ªám ch√≠nh 1' : 'key concept 1'}", "${language === 'vi' ? 'kh√°i ni·ªám 2' : 'concept 2'}", "${language === 'vi' ? 'kh√°i ni·ªám 3' : 'concept 3'}"],
    "recommendations": [
      "${language === 'vi' ? 'G·ª£i √Ω h·ªçc t·∫≠p chi ti·∫øt 1 v·ªõi l√Ω do c·ª• th·ªÉ' : 'Detailed learning suggestion 1 with specific reasons'}",
      "${language === 'vi' ? 'G·ª£i √Ω 2 v·ªõi ph∆∞∆°ng ph√°p th·ª±c hi·ªán' : 'Suggestion 2 with implementation method'}",
      "${language === 'vi' ? 'G·ª£i √Ω 3 v·ªõi th·ªùi gian v√† t·∫ßn su·∫•t' : 'Suggestion 3 with time and frequency'}",
      "${language === 'vi' ? 'G·ª£i √Ω 4 v·ªÅ t√†i li·ªáu tham kh·∫£o b·ªï sung' : 'Suggestion 4 about additional reference materials'}",
      "${language === 'vi' ? 'G·ª£i √Ω 5 v·ªÅ c√°ch ƒë√°nh gi√° ti·∫øn ƒë·ªô' : 'Suggestion 5 about how to assess progress'}"
    ],
    "strengths": [
      "${language === 'vi' ? 'ƒêi·ªÉm m·∫°nh c·ªßa t√†i li·ªáu 1 v·ªõi gi·∫£i th√≠ch chi ti·∫øt' : 'Document strength 1 with detailed explanation'}",
      "${language === 'vi' ? 'ƒêi·ªÉm m·∫°nh 2 v·ªõi v√≠ d·ª• c·ª• th·ªÉ' : 'Strength 2 with specific example'}",
      "${language === 'vi' ? 'ƒêi·ªÉm m·∫°nh 3 v·ªÅ t√≠nh ·ª©ng d·ª•ng th·ª±c t·∫ø' : 'Strength 3 about practical application'}",
      "${language === 'vi' ? 'ƒêi·ªÉm m·∫°nh 4 v·ªÅ c·∫•u tr√∫c v√† t·ªï ch·ª©c' : 'Strength 4 about structure and organization'}",
      "${language === 'vi' ? 'ƒêi·ªÉm m·∫°nh 5 v·ªÅ ƒë·ªô c·∫≠p nh·∫≠t v√† ch√≠nh x√°c' : 'Strength 5 about currency and accuracy'}"
    ],
    "improvements": [
      "${language === 'vi' ? 'ƒêi·ªÉm c·∫ßn c·∫£i thi·ªán 1 v·ªõi ƒë·ªÅ xu·∫•t c·ª• th·ªÉ' : 'Improvement area 1 with specific suggestions'}",
      "${language === 'vi' ? 'C·∫£i thi·ªán 2 v·ªõi ph∆∞∆°ng ph√°p th·ª±c hi·ªán' : 'Improvement 2 with implementation method'}",
      "${language === 'vi' ? 'C·∫£i thi·ªán 3 v·ªÅ n·ªôi dung b·ªï sung' : 'Improvement 3 about additional content'}",
      "${language === 'vi' ? 'C·∫£i thi·ªán 4 v·ªÅ h√¨nh th·ª©c tr√¨nh b√†y' : 'Improvement 4 about presentation format'}",
      "${language === 'vi' ? 'C·∫£i thi·ªán 5 v·ªÅ t√≠nh t∆∞∆°ng t√°c' : 'Improvement 5 about interactivity'}"
    ],
    "learningPath": {
      "beginner": [
        "${language === 'vi' ? 'B∆∞·ªõc 1: ƒê·ªçc hi·ªÉu kh√°i ni·ªám c∆° b·∫£n' : 'Step 1: Understand basic concepts'}",
        "${language === 'vi' ? 'B∆∞·ªõc 2: L√†m quen v·ªõi thu·∫≠t ng·ªØ ch√≠nh' : 'Step 2: Familiarize with key terminology'}",
        "${language === 'vi' ? 'B∆∞·ªõc 3: Th·ª±c h√†nh v·ªõi v√≠ d·ª• ƒë∆°n gi·∫£n' : 'Step 3: Practice with simple examples'}"
      ],
      "intermediate": [
        "${language === 'vi' ? 'B∆∞·ªõc 1: Ph√¢n t√≠ch s√¢u c√°c kh√°i ni·ªám' : 'Step 1: Deep analysis of concepts'}",
        "${language === 'vi' ? 'B∆∞·ªõc 2: √Åp d·ª•ng v√†o t√¨nh hu·ªëng th·ª±c t·∫ø' : 'Step 2: Apply to real situations'}",
        "${language === 'vi' ? 'B∆∞·ªõc 3: So s√°nh v√† ƒë·ªëi chi·∫øu c√°c ph∆∞∆°ng ph√°p' : 'Step 3: Compare and contrast different methods'}"
      ],
      "advanced": [
        "${language === 'vi' ? 'B∆∞·ªõc 1: Nghi√™n c·ª©u chuy√™n s√¢u' : 'Step 1: In-depth research'}",
        "${language === 'vi' ? 'B∆∞·ªõc 2: Ph√°t tri·ªÉn ·ª©ng d·ª•ng m·ªõi' : 'Step 2: Develop new applications'}",
        "${language === 'vi' ? 'B∆∞·ªõc 3: ƒê√°nh gi√° v√† c·∫£i ti·∫øn' : 'Step 3: Evaluate and improve'}"
      ]
    },
    "assessment": {
      "knowledgeCheck": [
        "${language === 'vi' ? 'C√¢u h·ªèi ki·ªÉm tra ki·∫øn th·ª©c 1' : 'Knowledge check question 1'}",
        "${language === 'vi' ? 'C√¢u h·ªèi ki·ªÉm tra ki·∫øn th·ª©c 2' : 'Knowledge check question 2'}",
        "${language === 'vi' ? 'C√¢u h·ªèi ki·ªÉm tra ki·∫øn th·ª©c 3' : 'Knowledge check question 3'}"
      ],
      "practicalTasks": [
        "${language === 'vi' ? 'B√†i t·∫≠p th·ª±c h√†nh 1 v·ªõi h∆∞·ªõng d·∫´n' : 'Practical task 1 with guidance'}",
        "${language === 'vi' ? 'B√†i t·∫≠p th·ª±c h√†nh 2 v·ªõi m·ª•c ti√™u' : 'Practical task 2 with objectives'}",
        "${language === 'vi' ? 'B√†i t·∫≠p th·ª±c h√†nh 3 v·ªõi ƒë√°nh gi√°' : 'Practical task 3 with assessment'}"
      ],
      "criticalThinking": [
        "${language === 'vi' ? 'C√¢u h·ªèi t∆∞ duy ph·∫£n bi·ªán 1' : 'Critical thinking question 1'}",
        "${language === 'vi' ? 'C√¢u h·ªèi t∆∞ duy ph·∫£n bi·ªán 2' : 'Critical thinking question 2'}",
        "${language === 'vi' ? 'C√¢u h·ªèi t∆∞ duy ph·∫£n bi·ªán 3' : 'Critical thinking question 3'}"
      ]
    },
    "resources": {
      "additionalReading": [
        "${language === 'vi' ? 'T√†i li·ªáu tham kh·∫£o 1 v·ªõi m√¥ t·∫£' : 'Reference material 1 with description'}",
        "${language === 'vi' ? 'T√†i li·ªáu tham kh·∫£o 2 v·ªõi m√¥ t·∫£' : 'Reference material 2 with description'}",
        "${language === 'vi' ? 'T√†i li·ªáu tham kh·∫£o 3 v·ªõi m√¥ t·∫£' : 'Reference material 3 with description'}"
      ],
      "tools": [
        "${language === 'vi' ? 'C√¥ng c·ª• h·ªó tr·ª£ 1 v·ªõi c√°ch s·ª≠ d·ª•ng' : 'Support tool 1 with usage instructions'}",
        "${language === 'vi' ? 'C√¥ng c·ª• h·ªó tr·ª£ 2 v·ªõi c√°ch s·ª≠ d·ª•ng' : 'Support tool 2 with usage instructions'}",
        "${language === 'vi' ? 'C√¥ng c·ª• h·ªó tr·ª£ 3 v·ªõi c√°ch s·ª≠ d·ª•ng' : 'Support tool 3 with usage instructions'}"
      ],
      "communities": [
        "${language === 'vi' ? 'C·ªông ƒë·ªìng h·ªçc t·∫≠p 1 v·ªõi m√¥ t·∫£' : 'Learning community 1 with description'}",
        "${language === 'vi' ? 'C·ªông ƒë·ªìng h·ªçc t·∫≠p 2 v·ªõi m√¥ t·∫£' : 'Learning community 2 with description'}",
        "${language === 'vi' ? 'C·ªông ƒë·ªìng h·ªçc t·∫≠p 3 v·ªõi m√¥ t·∫£' : 'Learning community 3 with description'}"
      ]
    }
  }
}

${language === 'vi' ? 'N·ªòI DUNG C·∫¶N PH√ÇN T√çCH' : 'CONTENT TO ANALYZE'}:
"""
${processedText}
"""

üö® ${language === 'vi' ? 'C·∫¢NH B√ÅO CU·ªêI C√ôNG:' : 'FINAL WARNING:'}
- ${language === 'vi' ? 'NG√îN NG·ªÆ Y√äU C·∫¶U:' : 'REQUESTED LANGUAGE:'} ${language === 'vi' ? 'Ti·∫øng Vi·ªát' : 'English'}
- ${language === 'vi' ? 'T·∫§T C·∫¢ n·ªôi dung JSON PH·∫¢I b·∫±ng' : 'ALL JSON content MUST be in'} ${language === 'vi' ? 'Ti·∫øng Vi·ªát' : 'English'}
- ${language === 'vi' ? 'KH√îNG ƒê∆Ø·ª¢C VI·∫æT B·∫∞NG NG√îN NG·ªÆ KH√ÅC' : 'DO NOT WRITE IN OTHER LANGUAGES'}

‚ö†Ô∏è ${language === 'vi' ? 'Y√äU C·∫¶U CU·ªêI C√ôNG' : 'FINAL REQUIREMENTS'}: 
- ${language === 'vi' ? 'ƒê·ªåC K·ª∏ n·ªôi dung t√†i li·ªáu tr√™n' : 'READ CAREFULLY the content above'}
- ${language === 'vi' ? 'VI·∫æT T√ìM T·∫ÆT TH·ª∞C T·∫æ v·ªÅ n·ªôi dung ƒë√≥' : 'WRITE ACTUAL SUMMARY about that content'}
- ${language === 'vi' ? 'KH√îNG COPY Y√äU C·∫¶U N√ÄY V√ÄO SUMMARY' : 'DO NOT COPY THIS REQUEST INTO SUMMARY'}
- ${language === 'vi' ? 'SUMMARY PH·∫¢I C√ì √çT NH·∫§T' : 'SUMMARY MUST HAVE AT LEAST'} ${level === 'brief' ? '200' : level === 'moderate' ? '400' : '600'} ${language === 'vi' ? 'T·ª™' : 'WORDS'}

${language === 'vi' ? 'QUAN TR·ªåNG' : 'IMPORTANT'}: 
- ${language === 'vi' ? 'Ch·ªâ tr·∫£ v·ªÅ JSON thu·∫ßn t√∫y, KH√îNG c√≥ b·∫•t k·ª≥ text n√†o kh√°c tr∆∞·ªõc ho·∫∑c sau JSON' : 'Return only pure JSON, NO other text before or after JSON'}
- ${language === 'vi' ? 'Kh√¥ng c√≥ l·ªùi gi·ªõi thi·ªáu, kh√¥ng c√≥ gi·∫£i th√≠ch, ch·ªâ c√≥ JSON object duy nh·∫•t' : 'No introduction, no explanation, only the single JSON object'}
- ${language === 'vi' ? 'TRONG PH·∫¶N "summary", VI·∫æT N·ªòI DUNG TH·ª∞C T·∫æ T·ª™ T√ÄI LI·ªÜU, KH√îNG COPY Y√äU C·∫¶U N√ÄY' : 'IN THE "summary" SECTION, WRITE ACTUAL CONTENT FROM THE DOCUMENT, DO NOT COPY THIS REQUEST'}
- ${language === 'vi' ? 'T√≥m t·∫Øt PH·∫¢I d·ª±a tr√™n n·ªôi dung th·ª±c t·∫ø c·ªßa t√†i li·ªáu ƒë∆∞·ª£c cung c·∫•p' : 'Summary MUST be based on the actual content of the provided document'}
- ${language === 'vi' ? 'ƒê·ªÅ c·∫≠p ƒë·∫øn c√°c √Ω ch√≠nh, kh√°i ni·ªám, v√† chi ti·∫øt c·ª• th·ªÉ t·ª´ t√†i li·ªáu' : 'Mention main ideas, concepts, and specific details from the document'}
- ${language === 'vi' ? 'KH√îNG vi·∫øt summary chung chung, ph·∫£i li√™n quan tr·ª±c ti·∫øp ƒë·∫øn n·ªôi dung t√†i li·ªáu' : 'DO NOT write generic summary, must be directly related to document content'}
- ${language === 'vi' ? 'PH·∫¢I vi·∫øt √≠t nh·∫•t' : 'MUST write at least'} ${level === 'brief' ? '200' : level === 'moderate' ? '400' : '600'} ${language === 'vi' ? 't·ª´ cho ph·∫ßn summary' : 'words for the summary section'}

üö® ${language === 'vi' ? 'C·∫¢NH B√ÅO CU·ªêI C√ôNG V·ªÄ NG√îN NG·ªÆ' : 'FINAL LANGUAGE WARNING'}:
- ${language === 'vi' ? 'NG√îN NG·ªÆ Y√äU C·∫¶U:' : 'REQUESTED LANGUAGE:'} ${language === 'vi' ? 'Ti·∫øng Vi·ªát' : 'English'}
- ${language === 'vi' ? 'T·∫§T C·∫¢ n·ªôi dung JSON PH·∫¢I b·∫±ng' : 'ALL JSON content MUST be in'} ${language === 'vi' ? 'Ti·∫øng Vi·ªát' : 'English'}
- ${language === 'vi' ? 'KH√îNG ƒê∆Ø·ª¢C VI·∫æT B·∫∞NG NG√îN NG·ªÆ KH√ÅC' : 'DO NOT WRITE IN OTHER LANGUAGES'}
- ${language === 'vi' ? 'TUY·ªÜT ƒê·ªêI TU√ÇN TH·ª¶ Y√äU C·∫¶U NG√îN NG·ªÆ' : 'ABSOLUTELY FOLLOW LANGUAGE REQUIREMENT'}
- ${language === 'vi' ? 'NG√îN NG·ªÆ HI·ªÜN T·∫†I:' : 'CURRENT LANGUAGE:'} ${language === 'vi' ? 'Ti·∫øng Vi·ªát' : 'English'}
- ${language === 'vi' ? 'B·∫ÆT BU·ªòC VI·∫æT B·∫∞NG:' : 'MUST WRITE IN:'} ${language === 'vi' ? 'Ti·∫øng Vi·ªát' : 'English'}

üö® ${language === 'vi' ? 'C·∫¢NH B√ÅO CU·ªêI C√ôNG V·ªÄ KEYPOINTS' : 'FINAL KEYPOINTS WARNING'}:
- ${language === 'vi' ? 'PH·∫¢I t·∫°o √≠t nh·∫•t 3-5 keyPoints kh√°c nhau' : 'MUST create at least 3-5 different keyPoints'}
- ${language === 'vi' ? 'KH√îNG ƒê∆Ø·ª¢C ch·ªâ t·∫°o 1 keyPoint' : 'DO NOT create only 1 keyPoint'}
- ${language === 'vi' ? 'M·ªói keyPoint ph·∫£i c√≥ n·ªôi dung kh√°c nhau' : 'Each keyPoint must have different content'}
- ${language === 'vi' ? 'T·∫§T C·∫¢ keyPoints ph·∫£i d·ª±a tr√™n n·ªôi dung t√†i li·ªáu' : 'ALL keyPoints must be based on document content'}

üö® ${language === 'vi' ? 'C·∫¢NH B√ÅO QUAN TR·ªåNG V·ªÄ N·ªòI DUNG' : 'IMPORTANT CONTENT WARNING'}:
- ${language === 'vi' ? 'KH√îNG ƒê∆Ø·ª¢C s·ª≠ d·ª•ng placeholder nh∆∞ "M·ª•c ti√™u con 1", "V√≠ d·ª• 1", "C√¢u h·ªèi 1"' : 'DO NOT use placeholders like "Sub-objective 1", "Example 1", "Question 1"'}
- ${language === 'vi' ? 'PH·∫¢I vi·∫øt n·ªôi dung th·ª±c t·∫ø t·ª´ t√†i li·ªáu cho t·∫•t c·∫£ c√°c tr∆∞·ªùng' : 'MUST write actual content from the document for all fields'}
- ${language === 'vi' ? 'subObjectives, prerequisites, examples, practiceQuestions PH·∫¢I c√≥ n·ªôi dung c·ª• th·ªÉ' : 'subObjectives, prerequisites, examples, practiceQuestions MUST have specific content'}
- ${language === 'vi' ? 'KH√îNG ƒê∆Ø·ª¢C copy placeholder text t·ª´ template' : 'DO NOT copy placeholder text from template'}
- ${language === 'vi' ? 'KEYPOINTS: PH·∫¢I t·∫°o √≠t nh·∫•t 3-5 keyPoints kh√°c nhau, kh√¥ng ƒë∆∞·ª£c ch·ªâ c√≥ 1 keyPoint' : 'KEYPOINTS: MUST create at least 3-5 different keyPoints, do not create only 1 keyPoint'}`

         console.log('Generating summary with level:', level)
     console.log('Text length:', text.length)

    // Retry v·ªõi fallback cho summary API
    let aiResponse = ''
    let retryCount = 0
    const maxRetries = 3
    let finalPrompt = prompt
    
    while (retryCount < maxRetries) {
      try {
        console.log(`Summary generation attempt ${retryCount + 1}/${maxRetries}`)
        
        // N·∫øu retry l·∫ßn th·ª© 2 tr·ªü ƒëi, s·ª≠ d·ª•ng prompt m·∫°nh h∆°n
        if (retryCount > 0) {
          finalPrompt = prompt + `

${language === 'vi' ? 'L∆ØU √ù QUAN TR·ªåNG CHO L·∫¶N TH·ª¨ L·∫†I' : 'IMPORTANT NOTE FOR RETRY'}:
- ${language === 'vi' ? 'T√≥m t·∫Øt tr∆∞·ªõc ƒë√≥ qu√° ng·∫Øn, b·∫°n PH·∫¢I vi·∫øt d√†i h∆°n' : 'Previous summary was too short, you MUST write longer'}
- ${language === 'vi' ? 'T·ªêI THI·ªÇU' : 'MINIMUM'} ${level === 'brief' ? '400' : level === 'moderate' ? '800' : '1200'} ${language === 'vi' ? 't·ª´ cho t√≥m t·∫Øt' : 'words for summary'}
- ${language === 'vi' ? 'M·ªü r·ªông m·ªçi √Ω t∆∞·ªüng v√† gi·∫£i th√≠ch chi ti·∫øt' : 'Expand all ideas and explain in detail'}
- ${language === 'vi' ? 'KH√îNG ƒê∆Ø·ª¢C vi·∫øt t√≥m t·∫Øt ng·∫Øn g·ªçn' : 'DO NOT write short summary'}`
        }
        
                         const chatCompletion = await groq.chat.completions.create({
          messages: [
            {
              role: 'system',
              content: `You are an AI assistant that MUST respond in ${language === 'vi' ? 'Vietnamese' : 'English'} only. NEVER mix languages. The user's requested language is ${language === 'vi' ? 'Vietnamese' : 'English'}.`
            },
            {
              role: 'user',
              content: finalPrompt
            }
          ],
          model: 'llama-3.1-8b-instant',
          temperature: 0.05,
          max_tokens: 8000,
          top_p: 0.9
        })
        
        aiResponse = chatCompletion.choices[0]?.message?.content || ''
        console.log('AI Response length:', aiResponse.length)
        console.log('AI Response preview:', aiResponse.substring(0, 200))
        
        // Ki·ªÉm tra xem response c√≥ ch·ª©a JSON kh√¥ng
        if (aiResponse.includes('{') && aiResponse.includes('}')) {
          console.log(`Response contains JSON, proceeding to parse`)
          break
        } else {
          console.log(`Response doesn't contain valid JSON structure`)
          retryCount++
          if (retryCount >= maxRetries) {
            console.log('Max retries reached, response still invalid')
            break
          }
          await new Promise(resolve => setTimeout(resolve, 1000 * retryCount))
        }
        
      } catch (apiError: any) {
        retryCount++
        console.error(`Summary API failed (attempt ${retryCount}):`, apiError.message)
        
        if (retryCount >= maxRetries) {
          console.log('Max retries reached for summary, using enhanced fallback')
          aiResponse = ''
          break
        }
        
        await new Promise(resolve => setTimeout(resolve, 1000 * retryCount))
      }
    }

    console.log('AI summary response received')

    // Parse AI response
    let parsedResponse: SummaryResponse
    
    // If AI response is empty (due to quota/errors), go directly to fallback
    if (!aiResponse || aiResponse.trim() === '') {
      console.log('AI response is empty, using enhanced fallback response')
      parsedResponse = null as any
    } else {
      try {
        // T√¨m JSON trong response
        let jsonStart = aiResponse.indexOf('{')
        let jsonEnd = aiResponse.lastIndexOf('}')
        
        if (jsonStart === -1 || jsonEnd === -1) {
          throw new Error('No JSON structure found in response')
        }
        
        // Tr√≠ch xu·∫•t JSON
        let jsonString = aiResponse.substring(jsonStart, jsonEnd + 1)
        
        // Lo·∫°i b·ªè markdown code blocks n·∫øu c√≥
        jsonString = jsonString.replace(/^```json\n?/i, '').replace(/\n?```$/i, '')
        
        // Lo·∫°i b·ªè c√°c k√Ω t·ª± control kh√¥ng h·ª£p l·ªá trong JSON
        jsonString = jsonString.replace(/[\x00-\x1F\x7F-\x9F]/g, '')
        
        // Thay th·∫ø c√°c k√Ω t·ª± newline v√† tab trong string values
        jsonString = jsonString.replace(/\n/g, '\\n').replace(/\t/g, '\\t')
        
        console.log('Extracted JSON string length:', jsonString.length)
        console.log('JSON preview:', jsonString.substring(0, 200))
        
        parsedResponse = JSON.parse(jsonString)
        console.log('Successfully parsed AI response')
        
                 // Ki·ªÉm tra ƒë·ªô d√†i summary sau khi parse
         const summaryWordCount = parsedResponse.summary?.split(/\s+/).length || 0
         const minRequiredWords = level === 'brief' ? 150 : level === 'moderate' ? 200 : 400
         
         console.log(`Parsed summary word count: ${summaryWordCount}, required: ${minRequiredWords}`)
         console.log(`Summary preview: ${parsedResponse.summary?.substring(0, 200)}...`)
         
         // Ch·ªâ s·ª≠ d·ª•ng fallback n·∫øu summary qu√° ng·∫Øn ho·∫∑c kh√¥ng c√≥ n·ªôi dung
         if (!parsedResponse.summary || parsedResponse.summary.length < 100 || summaryWordCount < 100) {
           console.log('Summary too short or empty after parsing, will use fallback')
           parsedResponse = null as any
         } else {
           console.log('AI response is valid, using it instead of fallback')
         }
        
      } catch (parseError) {
        console.error('Failed to parse AI response:', parseError)
        console.error('Raw AI response preview:', aiResponse.substring(0, 500))
        parsedResponse = null as any
      }
    }

         // Ki·ªÉm tra ƒë·ªô d√†i t√≥m t·∫Øt v√† retry n·∫øu c·∫ßn
     const minSummaryLength = level === 'brief' ? 150 : level === 'moderate' ? 200 : 400
     const summaryWordCount = parsedResponse?.summary?.split(/\s+/).length || 0
     
     console.log('Final check - parsedResponse exists:', !!parsedResponse)
     console.log('Final check - summary exists:', !!parsedResponse?.summary)
     console.log('Final check - summary length:', parsedResponse?.summary?.length || 0)
     console.log('Final check - summary word count:', summaryWordCount)
     console.log('Final check - min required:', minSummaryLength)
     
     if (!parsedResponse || !parsedResponse.summary || parsedResponse.summary.length < 100 || summaryWordCount < 100) {
      console.log('Generating enhanced fallback response')
      
      // Enhanced fallback response d·ª±a tr√™n n·ªôi dung th·∫≠t
      const wordCount = text.split(/\s+/).length
      const estimatedTime = Math.max(5, Math.round(wordCount / 150))
      
      // Tr√≠ch xu·∫•t m·ªôt s·ªë t·ª´ kh√≥a t·ª´ content
      const keywords = text.toLowerCase()
        .split(/\W+/)
        .filter(word => word.length > 4)
        .slice(0, 15)
        .filter(word => !['this', 'that', 'with', 'from', 'they', 'have', 'will', 'been', 'were', 'their', 'there', 'these', 'those'].includes(word))
      
             const levelText = level === 'brief' ? (language === 'vi' ? 'ng·∫Øn g·ªçn' : 'brief') : 
                        level === 'detailed' ? (language === 'vi' ? 'chi ti·∫øt' : 'detailed') : 
                        (language === 'vi' ? 't·ªïng quan' : 'moderate')
      
                           // T·∫°o t√≥m t·∫Øt fallback d·ª±a tr√™n n·ªôi dung th·ª±c t·∫ø c·ªßa file
        const firstFewWords = text.substring(0, 1000).toLowerCase()
        const isDataScience = firstFewWords.includes('pandas') || firstFewWords.includes('data') || firstFewWords.includes('d·ªØ li·ªáu')
        const isProgramming = firstFewWords.includes('python') || firstFewWords.includes('code') || firstFewWords.includes('l·∫≠p tr√¨nh')
        const isLab = firstFewWords.includes('lab') || firstFewWords.includes('th·ª±c h√†nh') || firstFewWords.includes('b√†i t·∫≠p')
        const isVideoGame = firstFewWords.includes('video game') || firstFewWords.includes('game') || firstFewWords.includes('tr√≤ ch∆°i')
        const isVisualization = firstFewWords.includes('tr·ª±c quan') || firstFewWords.includes('visualization') || firstFewWords.includes('bi·ªÉu ƒë·ªì')
        const isPreprocessing = firstFewWords.includes('ti·ªÅn x·ª≠ l√Ω') || firstFewWords.includes('preprocessing') || firstFewWords.includes('l√†m s·∫°ch')
        
        let topicDescription = language === 'vi' ? 'ch·ªß ƒë·ªÅ ch√≠nh' : 'main topic'
        if (isDataScience && isLab) topicDescription = language === 'vi' ? 'th·ª±c h√†nh khoa h·ªçc d·ªØ li·ªáu v√† ph√¢n t√≠ch' : 'data science practice and analysis'
        else if (isDataScience) topicDescription = language === 'vi' ? 'khoa h·ªçc d·ªØ li·ªáu v√† ph√¢n t√≠ch' : 'data science and analysis'
        else if (isProgramming) topicDescription = language === 'vi' ? 'l·∫≠p tr√¨nh v√† ph√°t tri·ªÉn' : 'programming and development'
        else if (isLab) topicDescription = language === 'vi' ? 'th·ª±c h√†nh v√† b√†i t·∫≠p' : 'practice and exercises'
        
        let specificContent = ''
        if (isVideoGame) specificContent = language === 'vi' ? 'v·ªÅ d·ªØ li·ªáu Video Game Sales' : 'about Video Game Sales data'
        if (isVisualization) specificContent = language === 'vi' ? 'v·ªÅ tr·ª±c quan h√≥a d·ªØ li·ªáu' : 'about data visualization'
        if (isPreprocessing) specificContent = language === 'vi' ? 'v·ªÅ ti·ªÅn x·ª≠ l√Ω d·ªØ li·ªáu' : 'about data preprocessing'
       
               const fallbackSummary = language === 'vi' ? 
          `T√†i li·ªáu n√†y ch·ª©a ${wordCount} t·ª´ v·ªõi n·ªôi dung ${levelText} v·ªÅ ${topicDescription}${specificContent ? ' ' + specificContent : ''}. 

D·ª±a tr√™n ph√¢n t√≠ch n·ªôi dung, t√†i li·ªáu n√†y t·∫≠p trung v√†o vi·ªác cung c·∫•p ki·∫øn th·ª©c th·ª±c t·∫ø v√† h∆∞·ªõng d·∫´n chi ti·∫øt cho ng∆∞·ªùi h·ªçc v·ªÅ ${topicDescription}. N·ªôi dung ƒë∆∞·ª£c c·∫•u tr√∫c r√µ r√†ng v·ªõi c√°c ph·∫ßn ch√≠nh v√† ph·ª•, bao g·ªìm c√°c kh√°i ni·ªám quan tr·ªçng v√† th√¥ng tin h·ªØu √≠ch cho vi·ªác h·ªçc t·∫≠p.

C√°c ƒëi·ªÉm n·ªïi b·∫≠t trong t√†i li·ªáu bao g·ªìm:
- Th√¥ng tin c∆° b·∫£n v·ªÅ ${topicDescription} ƒë∆∞·ª£c tr√¨nh b√†y m·ªôt c√°ch c√≥ h·ªá th·ªëng v√† d·ªÖ hi·ªÉu
- C√°c ƒë·ªãnh nghƒ©a v√† gi·∫£i th√≠ch chi ti·∫øt v·ªÅ c√°c thu·∫≠t ng·ªØ quan tr·ªçng, gi√∫p ng∆∞·ªùi ƒë·ªçc hi·ªÉu s√¢u v·ªÅ b·∫£n ch·∫•t c·ªßa v·∫•n ƒë·ªÅ
- V√≠ d·ª• v√† minh h·ªça th·ª±c t·∫ø ƒë·ªÉ h·ªó tr·ª£ vi·ªác hi·ªÉu bi·∫øt v√† √°p d·ª•ng ki·∫øn th·ª©c v√†o th·ª±c t·∫ø
- Ph√¢n t√≠ch v√† ƒë√°nh gi√° c√°c kh√≠a c·∫°nh kh√°c nhau c·ªßa ch·ªß ƒë·ªÅ, cung c·∫•p g√≥c nh√¨n to√†n di·ªán
- K·∫øt lu·∫≠n v√† ·ª©ng d·ª•ng th·ª±c t·∫ø c·ªßa ki·∫øn th·ª©c ƒë∆∞·ª£c tr√¨nh b√†y, gi√∫p ng∆∞·ªùi h·ªçc th·∫•y ƒë∆∞·ª£c gi√° tr·ªã th·ª±c ti·ªÖn

T√†i li·ªáu n√†y ph√π h·ª£p cho vi·ªác h·ªçc t·∫≠p v√† nghi√™n c·ª©u, cung c·∫•p n·ªÅn t·∫£ng ki·∫øn th·ª©c v·ªØng ch·∫Øc cho ng∆∞·ªùi ƒë·ªçc. V·ªõi ƒë·ªô d√†i ${wordCount} t·ª´, t√†i li·ªáu y√™u c·∫ßu th·ªùi gian ƒë·ªçc v√† nghi√™n c·ª©u kho·∫£ng ${estimatedTime} ph√∫t ƒë·ªÉ hi·ªÉu ƒë·∫ßy ƒë·ªß n·ªôi dung. M·∫∑c d√π AI service t·∫°m th·ªùi kh√¥ng kh·∫£ d·ª•ng ƒë·ªÉ ph√¢n t√≠ch chi ti·∫øt h∆°n, b·∫°n v·∫´n c√≥ th·ªÉ s·ª≠ d·ª•ng c√°c t√≠nh nƒÉng kh√°c nh∆∞ t·∫°o flashcard v√† quiz ƒë·ªÉ t·ªëi ∆∞u h√≥a vi·ªác h·ªçc t·∫≠p t·ª´ n·ªôi dung n√†y.

ƒê·ªÉ h·ªçc hi·ªáu qu·∫£ t·ª´ t√†i li·ªáu n√†y, b·∫°n n√™n:
- ƒê·ªçc k·ªπ t·ª´ng ph·∫ßn v√† ghi ch√∫ c√°c ƒëi·ªÉm quan tr·ªçng
- T·∫°o s∆° ƒë·ªì t∆∞ duy ƒë·ªÉ k·∫øt n·ªëi c√°c kh√°i ni·ªám
- Th·ª±c h√†nh v·ªõi c√°c v√≠ d·ª• ƒë∆∞·ª£c cung c·∫•p
- √în t·∫≠p ƒë·ªãnh k·ª≥ ƒë·ªÉ c·ªßng c·ªë ki·∫øn th·ª©c` :
          `This document contains ${wordCount} words with ${levelText} content about ${topicDescription}${specificContent ? ' ' + specificContent : ''}. 

Based on content analysis, this document focuses on providing practical knowledge and detailed guidance for learners about ${topicDescription}. The content is clearly structured with main and secondary sections, including important concepts and useful information for learning.

Key highlights in the document include:
- Basic information about ${topicDescription} presented systematically and understandably
- Detailed definitions and explanations of important terms, helping readers understand the nature of the subject
- Examples and practical illustrations to support understanding and application of knowledge
- Analysis and evaluation of different aspects of the topic, providing a comprehensive perspective
- Conclusions and practical applications of knowledge, helping learners see practical value

This document is suitable for learning and research, providing a solid knowledge foundation for readers. With ${wordCount} words, the document requires approximately ${estimatedTime} minutes of reading and research to fully understand the content. Although AI service is temporarily unavailable for more detailed analysis, you can still use other features such as creating flashcards and quizzes to optimize learning from this content.

To learn effectively from this document, you should:
- Read each section carefully and note important points
- Create mind maps to connect concepts
- Practice with provided examples
- Review regularly to consolidate knowledge`
      
             parsedResponse = {
         summary: fallbackSummary,
         objectives: language === 'vi' ? [
           {
             id: 'obj_1',
             title: 'Hi·ªÉu r√µ n·ªôi dung ch√≠nh',
             description: 'N·∫Øm v·ªØng c√°c kh√°i ni·ªám v√† √Ω t∆∞·ªüng ch√≠nh ƒë∆∞·ª£c tr√¨nh b√†y trong t√†i li·ªáu, bao g·ªìm c√°c ƒë·ªãnh nghƒ©a quan tr·ªçng v√† m·ªëi quan h·ªá gi·ªØa c√°c kh√°i ni·ªám',
             category: 'Ki·∫øn th·ª©c c∆° b·∫£n',
             importance: 'high' as const,
             estimatedTime: 45,
             subObjectives: [
               'ƒê·ªçc v√† hi·ªÉu c√°c ƒë·ªãnh nghƒ©a c∆° b·∫£n',
               'X√°c ƒë·ªãnh c√°c kh√°i ni·ªám ch√≠nh',
               'Hi·ªÉu m·ªëi quan h·ªá gi·ªØa c√°c kh√°i ni·ªám'
             ],
             prerequisites: ['Ki·∫øn th·ª©c n·ªÅn t·∫£ng v·ªÅ ch·ªß ƒë·ªÅ']
           },
           {
             id: 'obj_2', 
             title: '√Åp d·ª•ng ki·∫øn th·ª©c th·ª±c t·∫ø',
             description: 'Bi·∫øt c√°ch ·ª©ng d·ª•ng ki·∫øn th·ª©c ƒë√£ h·ªçc v√†o c√°c t√¨nh hu·ªëng th·ª±c t·∫ø v√† gi·∫£i quy·∫øt c√°c v·∫•n ƒë·ªÅ li√™n quan',
             category: '·ª®ng d·ª•ng',
             importance: 'medium' as const,
             estimatedTime: 60,
             subObjectives: [
               'T√¨m hi·ªÉu c√°c v√≠ d·ª• th·ª±c t·∫ø',
               'Th·ª±c h√†nh gi·∫£i quy·∫øt v·∫•n ƒë·ªÅ',
               '√Åp d·ª•ng v√†o t√¨nh hu·ªëng m·ªõi'
             ],
             prerequisites: ['Hi·ªÉu r√µ n·ªôi dung ch√≠nh']
           },
           {
             id: 'obj_3',
             title: 'Ph√¢n t√≠ch v√† ƒë√°nh gi√° n·ªôi dung',
             description: 'Ph√¢n t√≠ch s√¢u s·∫Øc v√† ƒë√°nh gi√° ch·∫•t l∆∞·ª£ng th√¥ng tin t·ª´ t√†i li·ªáu, x√°c ƒë·ªãnh ƒëi·ªÉm m·∫°nh v√† ƒëi·ªÉm y·∫øu',
             category: 'T∆∞ duy ph·∫£n bi·ªán',
             importance: 'medium' as const,
             estimatedTime: 30,
             subObjectives: [
               'Ph√¢n t√≠ch logic c·ªßa n·ªôi dung',
               'ƒê√°nh gi√° ƒë·ªô tin c·∫≠y',
               'X√°c ƒë·ªãnh ƒëi·ªÉm m·∫°nh v√† y·∫øu'
             ],
             prerequisites: ['Hi·ªÉu r√µ n·ªôi dung ch√≠nh', '√Åp d·ª•ng ki·∫øn th·ª©c th·ª±c t·∫ø']
           },
           {
             id: 'obj_4',
             title: 'T√≠ch h·ª£p ki·∫øn th·ª©c',
             description: 'K·∫øt h·ª£p ki·∫øn th·ª©c t·ª´ t√†i li·ªáu v·ªõi c√°c ki·∫øn th·ª©c kh√°c ƒë·ªÉ t·∫°o ra hi·ªÉu bi·∫øt to√†n di·ªán',
             category: 'T√≠ch h·ª£p',
             importance: 'low' as const,
             estimatedTime: 40,
             subObjectives: [
               'K·∫øt n·ªëi v·ªõi ki·∫øn th·ª©c hi·ªán c√≥',
               'T·∫°o s∆° ƒë·ªì t∆∞ duy',
               'T·ªïng h·ª£p th√¥ng tin'
             ],
             prerequisites: ['T·∫•t c·∫£ c√°c m·ª•c ti√™u tr∆∞·ªõc']
           }
         ] : [
           {
             id: 'obj_1',
             title: 'Understand Main Content',
             description: 'Master the key concepts and ideas presented in the document, including important definitions and relationships between concepts',
             category: 'Basic Knowledge',
             importance: 'high' as const,
             estimatedTime: 45,
             subObjectives: [
               'Read and understand basic definitions',
               'Identify key concepts',
               'Understand relationships between concepts'
             ],
             prerequisites: ['Basic knowledge of the topic']
           },
           {
             id: 'obj_2', 
             title: 'Apply Practical Knowledge',
             description: 'Know how to apply learned knowledge to real situations and solve related problems',
             category: 'Application',
             importance: 'medium' as const,
             estimatedTime: 60,
             subObjectives: [
               'Study real examples',
               'Practice problem solving',
               'Apply to new situations'
             ],
             prerequisites: ['Understand Main Content']
           },
           {
             id: 'obj_3',
             title: 'Analyze and Evaluate Content',
             description: 'Deeply analyze and evaluate the quality of information from the document, identify strengths and weaknesses',
             category: 'Critical Thinking',
             importance: 'medium' as const,
             estimatedTime: 30,
             subObjectives: [
               'Analyze content logic',
               'Evaluate reliability',
               'Identify strengths and weaknesses'
             ],
             prerequisites: ['Understand Main Content', 'Apply Practical Knowledge']
           },
           {
             id: 'obj_4',
             title: 'Integrate Knowledge',
             description: 'Combine knowledge from the document with other knowledge to create comprehensive understanding',
             category: 'Integration',
             importance: 'low' as const,
             estimatedTime: 40,
             subObjectives: [
               'Connect with existing knowledge',
               'Create mind maps',
               'Synthesize information'
             ],
             prerequisites: ['All previous objectives']
           }
         ],
                 keyPoints: language === 'vi' ? [
           {
             id: 'key_1',
             content: 'T√†i li·ªáu ch·ª©a th√¥ng tin quan tr·ªçng c·∫ßn ƒë∆∞·ª£c nghi√™n c·ª©u k·ªπ l∆∞·ª°ng v√† hi·ªÉu s√¢u v·ªÅ c√°c kh√°i ni·ªám ƒë∆∞·ª£c tr√¨nh b√†y',
             category: 'Kh√°i ni·ªám ch√≠nh',
             difficulty: 'intermediate' as const,
             relatedConcepts: ['L√Ω thuy·∫øt', 'Th·ª±c h√†nh', '·ª®ng d·ª•ng', 'Ph√¢n t√≠ch'],
             explanation: 'ƒê√¢y l√† ƒëi·ªÉm quan tr·ªçng nh·∫•t c·∫ßn n·∫Øm v·ªØng ƒë·ªÉ hi·ªÉu to√†n b·ªô n·ªôi dung t√†i li·ªáu',
             examples: [
               'Khi ƒë·ªçc t√†i li·ªáu, h√£y ghi ch√∫ c√°c kh√°i ni·ªám ch√≠nh',
               'T·∫°o s∆° ƒë·ªì t∆∞ duy ƒë·ªÉ k·∫øt n·ªëi c√°c kh√°i ni·ªám',
               'Th·ª±c h√†nh gi·∫£i th√≠ch l·∫°i b·∫±ng l·ªùi c·ªßa m√¨nh'
             ],
             practiceQuestions: [
               'B·∫°n c√≥ th·ªÉ gi·∫£i th√≠ch kh√°i ni·ªám ch√≠nh n√†y b·∫±ng l·ªùi c·ªßa m√¨nh kh√¥ng?',
               'H√£y t√¨m 3 v√≠ d·ª• th·ª±c t·∫ø minh h·ªça cho kh√°i ni·ªám n√†y',
               'So s√°nh kh√°i ni·ªám n√†y v·ªõi kh√°i ni·ªám t∆∞∆°ng t·ª± kh√°c'
             ]
           },
           {
             id: 'key_2',
             content: `V·ªõi ${wordCount} t·ª´, t√†i li·ªáu y√™u c·∫ßu th·ªùi gian ƒë·ªçc v√† nghi√™n c·ª©u kho·∫£ng ${estimatedTime} ph√∫t ƒë·ªÉ hi·ªÉu ƒë·∫ßy ƒë·ªß`,
             category: 'Th·ªëng k√™',
             difficulty: 'basic' as const,
             relatedConcepts: ['Th·ªùi gian', 'ƒê·ªô d√†i', 'N·ªôi dung', 'H·ªçc t·∫≠p'],
             explanation: 'Hi·ªÉu v·ªÅ ƒë·ªô d√†i v√† th·ªùi gian c·∫ßn thi·∫øt gi√∫p l·∫≠p k·∫ø ho·∫°ch h·ªçc t·∫≠p hi·ªáu qu·∫£',
             examples: [
               'Chia nh·ªè th·ªùi gian h·ªçc th√†nh c√°c phi√™n 25 ph√∫t',
               'S·ª≠ d·ª•ng k·ªπ thu·∫≠t Pomodoro ƒë·ªÉ t·∫≠p trung',
               'D√†nh th·ªùi gian √¥n t·∫≠p sau m·ªói phi√™n h·ªçc'
             ],
             practiceQuestions: [
               'B·∫°n s·∫Ω chia th·ªùi gian h·ªçc nh∆∞ th·∫ø n√†o?',
               'L√†m th·∫ø n√†o ƒë·ªÉ t·ªëi ∆∞u th·ªùi gian h·ªçc t·∫≠p?',
               'B·∫°n c√≥ th·ªÉ t·∫°o l·ªãch h·ªçc chi ti·∫øt kh√¥ng?'
             ]
           },
           {
             id: 'key_3',
             content: 'T√†i li·ªáu ƒë∆∞·ª£c c·∫•u tr√∫c logic v·ªõi c√°c ph·∫ßn ch√≠nh v√† ph·ª•, gi√∫p ng∆∞·ªùi ƒë·ªçc d·ªÖ d√†ng theo d√µi v√† hi·ªÉu n·ªôi dung',
             category: 'C·∫•u tr√∫c',
             difficulty: 'basic' as const,
             relatedConcepts: ['T·ªï ch·ª©c', 'Logic', 'Hi·ªÉu bi·∫øt', 'H·ªçc t·∫≠p'],
             explanation: 'C·∫•u tr√∫c logic gi√∫p ng∆∞·ªùi ƒë·ªçc d·ªÖ d√†ng theo d√µi v√† hi·ªÉu n·ªôi dung m·ªôt c√°ch c√≥ h·ªá th·ªëng',
             examples: [
               'ƒê·ªçc ph·∫ßn m·ª•c l·ª•c tr∆∞·ªõc khi b·∫Øt ƒë·∫ßu',
               'T·∫°o outline cho t·ª´ng ch∆∞∆°ng',
               'S·ª≠ d·ª•ng mind map ƒë·ªÉ t·ªï ch·ª©c th√¥ng tin'
             ],
             practiceQuestions: [
               'B·∫°n c√≥ th·ªÉ v·∫Ω s∆° ƒë·ªì c·∫•u tr√∫c t√†i li·ªáu kh√¥ng?',
               'H√£y t√≥m t·∫Øt c·∫•u tr√∫c ch√≠nh c·ªßa t√†i li·ªáu',
               'L√†m th·∫ø n√†o ƒë·ªÉ c·∫£i thi·ªán c·∫•u tr√∫c n√†y?'
             ]
           }
         ] : [
           {
             id: 'key_1',
             content: 'The document contains important information that needs to be thoroughly researched and deeply understood about the presented concepts',
             category: 'Main Concepts',
             difficulty: 'intermediate' as const,
             relatedConcepts: ['Theory', 'Practice', 'Application', 'Analysis'],
             explanation: 'This is the most important point to master in order to understand the entire document content',
             examples: [
               'When reading the document, take notes on key concepts',
               'Create mind maps to connect concepts',
               'Practice explaining in your own words'
             ],
             practiceQuestions: [
               'Can you explain this key concept in your own words?',
               'Find 3 real-world examples that illustrate this concept',
               'Compare this concept with a similar one'
             ]
           },
           {
             id: 'key_2',
             content: `With ${wordCount} words, the document requires approximately ${estimatedTime} minutes of reading and research to fully understand`,
             category: 'Statistics',
             difficulty: 'basic' as const,
             relatedConcepts: ['Time', 'Length', 'Content', 'Learning'],
             explanation: 'Understanding length and required time helps plan effective study sessions',
             examples: [
               'Break study time into 25-minute sessions',
               'Use Pomodoro technique for focus',
               'Allocate review time after each session'
             ],
             practiceQuestions: [
               'How would you divide your study time?',
               'How can you optimize your study time?',
               'Can you create a detailed study schedule?'
             ]
           },
           {
             id: 'key_3',
             content: 'The document is logically structured with main and secondary sections, helping readers easily follow and understand the content',
             category: 'Structure',
             difficulty: 'basic' as const,
             relatedConcepts: ['Organization', 'Logic', 'Understanding', 'Learning'],
             explanation: 'Logical structure helps readers easily follow and understand content systematically',
             examples: [
               'Read the table of contents before starting',
               'Create outlines for each chapter',
               'Use mind maps to organize information'
             ],
             practiceQuestions: [
               'Can you draw a diagram of the document structure?',
               'Summarize the main structure of the document',
               'How can this structure be improved?'
             ]
           }
         ],
                 insights: {
           difficulty: (wordCount > 2000 ? 'hard' : wordCount > 800 ? 'medium' : 'easy') as 'easy' | 'medium' | 'hard',
          estimatedReadTime: estimatedTime,
          keyConcepts: keywords.slice(0, 8),
                     recommendations: language === 'vi' ? [
             `ƒê·ªçc k·ªπ t√†i li·ªáu ${wordCount} t·ª´ n√†y v·ªõi th·ªùi gian ${estimatedTime} ph√∫t ƒë·ªÉ n·∫Øm v·ªØng n·ªôi dung ch√≠nh`, 
             'Ghi ch√∫ c√°c ƒëi·ªÉm quan tr·ªçng v√† kh√°i ni·ªám ch√≠nh v√†o s·ªï tay h·ªçc t·∫≠p',
             'T·∫°o flashcard ƒë·ªÉ √¥n t·∫≠p c√°c kh√°i ni·ªám quan tr·ªçng m·ªói ng√†y',
             'L√†m quiz ƒë·ªÉ ki·ªÉm tra m·ª©c ƒë·ªô hi·ªÉu bi·∫øt v√† x√°c ƒë·ªãnh ƒëi·ªÉm y·∫øu',
             '√în t·∫≠p ƒë·ªãnh k·ª≥ m·ªói tu·∫ßn ƒë·ªÉ ghi nh·ªõ l√¢u d√†i v√† c·ªßng c·ªë ki·∫øn th·ª©c',
             '√Åp d·ª•ng ki·∫øn th·ª©c v√†o th·ª±c t·∫ø th√¥ng qua c√°c b√†i t·∫≠p v√† d·ª± √°n th·ª±c h√†nh'
           ] : [
             `Read this ${wordCount}-word document carefully with ${estimatedTime} minutes to master the main content`, 
             'Note important points and key concepts in your study notebook',
             'Create flashcards to review important concepts daily',
             'Take quizzes to test understanding and identify weaknesses',
             'Review regularly each week for long-term retention and knowledge consolidation',
             'Apply knowledge to practice through exercises and practical projects'
           ],
                     strengths: language === 'vi' ? [
             'N·ªôi dung ƒë∆∞·ª£c tr√≠ch xu·∫•t th√†nh c√¥ng v√† ƒë·∫ßy ƒë·ªß v·ªõi c·∫•u tr√∫c r√µ r√†ng', 
             'C√≥ th·ªÉ t·∫°o flashcard v√† quiz ƒë·ªÉ h·ªó tr·ª£ h·ªçc t·∫≠p hi·ªáu qu·∫£',
             'H·ªá th·ªëng fallback ho·∫°t ƒë·ªông ·ªïn ƒë·ªãnh v√† ƒë√°ng tin c·∫≠y',
             'T√†i li·ªáu c√≥ c·∫•u tr√∫c logic v√† d·ªÖ hi·ªÉu cho ng∆∞·ªùi h·ªçc',
             'Ph√π h·ª£p cho nhi·ªÅu ƒë·ªëi t∆∞·ª£ng h·ªçc vi√™n kh√°c nhau'
           ] : [
             'Content successfully extracted and complete with clear structure', 
             'Can create flashcards and quizzes to support effective learning',
             'Fallback system operates stably and reliably',
             'Document has logical structure and is easy to understand for learners',
             'Suitable for various types of learners'
           ],
                     improvements: language === 'vi' ? [
             'AI service s·∫Ω kh·∫£ d·ª•ng sau ƒë·ªÉ ph√¢n t√≠ch chi ti·∫øt v√† chuy√™n s√¢u h∆°n',
             'C√≥ th·ªÉ b·ªï sung th√™m v√≠ d·ª• v√† minh h·ªça tr·ª±c quan',
             'T√≠ch h·ª£p th√™m c√°c ngu·ªìn tham kh·∫£o v√† t√†i li·ªáu li√™n quan',
             'B·ªï sung b√†i t·∫≠p th·ª±c h√†nh v√† case study c·ª• th·ªÉ',
             'TƒÉng c∆∞·ªùng t√≠nh t∆∞∆°ng t√°c v√† ph·∫£n h·ªìi t·ª©c th√¨'
           ] : [
             'AI service will be available later for more detailed and in-depth analysis',
             'Can add more examples and visual illustrations',
             'Integrate additional reference sources and related materials',
             'Add practical exercises and specific case studies',
             'Enhance interactivity and immediate feedback'
           ],
          learningPath: {
            beginner: [
              'B∆∞·ªõc 1: ƒê·ªçc hi·ªÉu kh√°i ni·ªám c∆° b·∫£n v√† thu·∫≠t ng·ªØ ch√≠nh',
              'B∆∞·ªõc 2: L√†m quen v·ªõi c·∫•u tr√∫c v√† t·ªï ch·ª©c n·ªôi dung',
              'B∆∞·ªõc 3: Th·ª±c h√†nh v·ªõi v√≠ d·ª• ƒë∆°n gi·∫£n v√† b√†i t·∫≠p c∆° b·∫£n'
            ],
            intermediate: [
              'B∆∞·ªõc 1: Ph√¢n t√≠ch s√¢u c√°c kh√°i ni·ªám v√† m·ªëi quan h·ªá',
              'B∆∞·ªõc 2: √Åp d·ª•ng ki·∫øn th·ª©c v√†o t√¨nh hu·ªëng th·ª±c t·∫ø',
              'B∆∞·ªõc 3: So s√°nh v√† ƒë·ªëi chi·∫øu c√°c ph∆∞∆°ng ph√°p kh√°c nhau'
            ],
            advanced: [
              'B∆∞·ªõc 1: Nghi√™n c·ª©u chuy√™n s√¢u v√† m·ªü r·ªông ki·∫øn th·ª©c',
              'B∆∞·ªõc 2: Ph√°t tri·ªÉn ·ª©ng d·ª•ng m·ªõi v√† s√°ng t·∫°o',
              'B∆∞·ªõc 3: ƒê√°nh gi√°, c·∫£i ti·∫øn v√† chia s·∫ª ki·∫øn th·ª©c'
            ]
          },
          assessment: {
            knowledgeCheck: [
              'B·∫°n c√≥ th·ªÉ gi·∫£i th√≠ch c√°c kh√°i ni·ªám ch√≠nh trong t√†i li·ªáu kh√¥ng?',
              'B·∫°n c√≥ th·ªÉ √°p d·ª•ng ki·∫øn th·ª©c v√†o t√¨nh hu·ªëng th·ª±c t·∫ø kh√¥ng?',
              'B·∫°n c√≥ th·ªÉ so s√°nh v√† ƒë·ªëi chi·∫øu c√°c ph∆∞∆°ng ph√°p kh√°c nhau kh√¥ng?'
            ],
            practicalTasks: [
              'T·∫°o m·ªôt b·∫£n t√≥m t·∫Øt c√° nh√¢n v·ªÅ n·ªôi dung ch√≠nh v·ªõi v√≠ d·ª• c·ª• th·ªÉ',
              'Th·ª±c hi·ªán m·ªôt d·ª± √°n nh·ªè √°p d·ª•ng ki·∫øn th·ª©c ƒë√£ h·ªçc',
              'Thi·∫øt k·∫ø m·ªôt b√†i thuy·∫øt tr√¨nh chia s·∫ª ki·∫øn th·ª©c v·ªõi ng∆∞·ªùi kh√°c'
            ],
            criticalThinking: [
              'Ph√¢n t√≠ch ∆∞u nh∆∞·ª£c ƒëi·ªÉm c·ªßa c√°c ph∆∞∆°ng ph√°p ƒë∆∞·ª£c ƒë·ªÅ c·∫≠p',
              'ƒê·ªÅ xu·∫•t c·∫£i ti·∫øn ho·∫∑c ph√°t tri·ªÉn m·ªõi d·ª±a tr√™n ki·∫øn th·ª©c ƒë√£ h·ªçc',
              'ƒê√°nh gi√° t√≠nh ·ª©ng d·ª•ng v√† hi·ªáu qu·∫£ trong b·ªëi c·∫£nh th·ª±c t·∫ø'
            ]
          },
          resources: {
            additionalReading: [
              'S√°ch gi√°o khoa chuy√™n ng√†nh v·ªõi c√°c ch∆∞∆°ng li√™n quan',
              'B√†i b√°o khoa h·ªçc v√† nghi√™n c·ª©u m·ªõi nh·∫•t trong lƒ©nh v·ª±c',
              'T√†i li·ªáu tham kh·∫£o v√† h∆∞·ªõng d·∫´n th·ª±c h√†nh chi ti·∫øt'
            ],
            tools: [
              'Ph·∫ßn m·ªÅm ph√¢n t√≠ch v√† tr·ª±c quan h√≥a d·ªØ li·ªáu',
              'C√¥ng c·ª• t·∫°o mindmap v√† s∆° ƒë·ªì t∆∞ duy',
              '·ª®ng d·ª•ng ghi ch√∫ v√† qu·∫£n l√Ω ki·∫øn th·ª©c c√° nh√¢n'
            ],
            communities: [
              'Di·ªÖn ƒë√†n h·ªçc t·∫≠p tr·ª±c tuy·∫øn v√† nh√≥m th·∫£o lu·∫≠n',
              'C·ªông ƒë·ªìng chuy√™n gia v√† ng∆∞·ªùi l√†m vi·ªác trong lƒ©nh v·ª±c',
              'Kh√≥a h·ªçc tr·ª±c tuy·∫øn v√† workshop th·ª±c h√†nh'
            ]
          }
        }
      }
    }

    // Validate v√† normalize response
    const normalizedResponse: SummaryResponse = {
      summary: parsedResponse.summary || 'Kh√¥ng th·ªÉ t·∫°o t√≥m t·∫Øt',
      objectives: (parsedResponse.objectives || []).map((obj, idx) => ({
        id: obj.id || `obj_${idx + 1}`,
        title: obj.title || 'M·ª•c ti√™u h·ªçc t·∫≠p',
        description: obj.description || 'M√¥ t·∫£ m·ª•c ti√™u',
        category: obj.category || 'T·ªïng quan',
        importance: (['high', 'medium', 'low'] as const).includes(obj.importance) ? obj.importance : 'medium',
        estimatedTime: obj.estimatedTime || 30,
        subObjectives: Array.isArray(obj.subObjectives) ? obj.subObjectives : ['Hi·ªÉu r√µ c√°c kh√°i ni·ªám c∆° b·∫£n trong t√†i li·ªáu', '√Åp d·ª•ng ki·∫øn th·ª©c v√†o t√¨nh hu·ªëng th·ª±c t·∫ø', 'ƒê√°nh gi√° v√† ph√¢n t√≠ch th√¥ng tin'],
        prerequisites: Array.isArray(obj.prerequisites) ? obj.prerequisites : ['Ki·∫øn th·ª©c n·ªÅn t·∫£ng v·ªÅ ch·ªß ƒë·ªÅ', 'K·ªπ nƒÉng ƒë·ªçc hi·ªÉu v√† ph√¢n t√≠ch']
      })),
      keyPoints: (parsedResponse.keyPoints || []).map((point, idx) => ({
        id: point.id || `key_${idx + 1}`,
        content: point.content || 'ƒêi·ªÉm ch√≠nh',
        category: point.category || 'T·ªïng quan',
        difficulty: (['basic', 'intermediate', 'advanced'] as const).includes(point.difficulty) ? point.difficulty : 'intermediate',
        relatedConcepts: Array.isArray(point.relatedConcepts) ? point.relatedConcepts : [],
        explanation: point.explanation || 'Gi·∫£i th√≠ch chi ti·∫øt v·ªÅ ƒëi·ªÉm n√†y',
        examples: Array.isArray(point.examples) ? point.examples : ['V√≠ d·ª• th·ª±c t·∫ø v·ªÅ ·ª©ng d·ª•ng ki·∫øn th·ª©c', 'V√≠ d·ª• minh h·ªça c√°c kh√°i ni·ªám ch√≠nh', 'V√≠ d·ª• v·ªÅ t√¨nh hu·ªëng th·ª±c t·∫ø'],
        practiceQuestions: Array.isArray(point.practiceQuestions) ? point.practiceQuestions : ['L√†m th·∫ø n√†o ƒë·ªÉ √°p d·ª•ng ki·∫øn th·ª©c n√†y v√†o th·ª±c t·∫ø?', 'B·∫°n c√≥ th·ªÉ gi·∫£i th√≠ch kh√°i ni·ªám n√†y cho ng∆∞·ªùi kh√°c kh√¥ng?', 'ƒêi·ªÅu g√¨ s·∫Ω x·∫£y ra n·∫øu thay ƒë·ªïi m·ªôt y·∫øu t·ªë trong t√¨nh hu·ªëng n√†y?']
      })),
      insights: {
        difficulty: (['easy', 'medium', 'hard'] as const).includes(parsedResponse.insights?.difficulty) ? parsedResponse.insights.difficulty : 'medium',
        estimatedReadTime: parsedResponse.insights?.estimatedReadTime || 10,
        keyConcepts: Array.isArray(parsedResponse.insights?.keyConcepts) ? parsedResponse.insights.keyConcepts : [],
        recommendations: Array.isArray(parsedResponse.insights?.recommendations) ? parsedResponse.insights.recommendations : [],
        strengths: Array.isArray(parsedResponse.insights?.strengths) ? parsedResponse.insights.strengths : [],
        improvements: Array.isArray(parsedResponse.insights?.improvements) ? parsedResponse.insights.improvements : [],
        learningPath: parsedResponse.insights?.learningPath || {
          beginner: ['B∆∞·ªõc 1: ƒê·ªçc hi·ªÉu kh√°i ni·ªám c∆° b·∫£n', 'B∆∞·ªõc 2: L√†m quen v·ªõi thu·∫≠t ng·ªØ ch√≠nh', 'B∆∞·ªõc 3: Th·ª±c h√†nh v·ªõi v√≠ d·ª• ƒë∆°n gi·∫£n'],
          intermediate: ['B∆∞·ªõc 1: Ph√¢n t√≠ch s√¢u c√°c kh√°i ni·ªám', 'B∆∞·ªõc 2: √Åp d·ª•ng v√†o t√¨nh hu·ªëng th·ª±c t·∫ø', 'B∆∞·ªõc 3: So s√°nh v√† ƒë·ªëi chi·∫øu c√°c ph∆∞∆°ng ph√°p'],
          advanced: ['B∆∞·ªõc 1: Nghi√™n c·ª©u chuy√™n s√¢u', 'B∆∞·ªõc 2: Ph√°t tri·ªÉn ·ª©ng d·ª•ng m·ªõi', 'B∆∞·ªõc 3: ƒê√°nh gi√° v√† c·∫£i ti·∫øn']
        },
        assessment: parsedResponse.insights?.assessment || {
          knowledgeCheck: ['B·∫°n c√≥ th·ªÉ gi·∫£i th√≠ch c√°c kh√°i ni·ªám ch√≠nh kh√¥ng?', 'B·∫°n c√≥ th·ªÉ √°p d·ª•ng ki·∫øn th·ª©c v√†o th·ª±c t·∫ø kh√¥ng?', 'B·∫°n c√≥ th·ªÉ so s√°nh c√°c ph∆∞∆°ng ph√°p kh√°c nhau kh√¥ng?'],
          practicalTasks: ['T·∫°o b·∫£n t√≥m t·∫Øt c√° nh√¢n', 'Th·ª±c hi·ªán d·ª± √°n nh·ªè', 'Thi·∫øt k·∫ø b√†i thuy·∫øt tr√¨nh'],
          criticalThinking: ['Ph√¢n t√≠ch ∆∞u nh∆∞·ª£c ƒëi·ªÉm', 'ƒê·ªÅ xu·∫•t c·∫£i ti·∫øn', 'ƒê√°nh gi√° t√≠nh ·ª©ng d·ª•ng']
        },
        resources: parsedResponse.insights?.resources || {
          additionalReading: ['S√°ch gi√°o khoa chuy√™n ng√†nh', 'B√†i b√°o khoa h·ªçc m·ªõi nh·∫•t', 'T√†i li·ªáu tham kh·∫£o chi ti·∫øt'],
          tools: ['Ph·∫ßn m·ªÅm ph√¢n t√≠ch d·ªØ li·ªáu', 'C√¥ng c·ª• t·∫°o mindmap', '·ª®ng d·ª•ng ghi ch√∫'],
          communities: ['Di·ªÖn ƒë√†n h·ªçc t·∫≠p tr·ª±c tuy·∫øn', 'C·ªông ƒë·ªìng chuy√™n gia', 'Kh√≥a h·ªçc tr·ª±c tuy·∫øn']
        }
      }
    }

    console.log('Successfully generated summary for level:', level)
    console.log('Final summary length:', normalizedResponse.summary.length)
    return NextResponse.json(normalizedResponse)

  } catch (error) {
    console.error('Generate summary error:', error)
    return NextResponse.json(
      { error: `Server error: ${error instanceof Error ? error.message : 'Unknown error'}` },
      { status: 500 }
    )
  }
}
